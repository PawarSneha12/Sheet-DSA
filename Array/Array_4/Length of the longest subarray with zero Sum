//Problem Statement: Given an array containing both positive and negative integers, we have to find the length of the longest 
subarray with the sum of all elements equal to zero.

//bruthForces

class LengthSubArray{
    public static void main(String[] args){
        int[] arr={9, -3, 3, -1, 6, -5};
        System.out.println(LengthSubArrayZeroSum(arr));
    }

    static int LengthSubArrayZeroSum(int[]arr){
        int max=0;
        for(int i=0;i<arr.length;i++){
            int sum=0;
            for(int j=i;j<arr.length;j++){
                sum+=arr[j];
                if(sum==0){
                    max=Math.max(max,j-i+1);
                }
            }
        }
            return max;
        }
    }
    
    //Optimal Approach 
    
      static int LengthSubA(int[] arr){
            HashMap<Integer,Integer> hm=new HashMap<Integer,Integer>();
            int maxi=0;
            int sum=0;
            for(int i=0;i<arr.length;i++){
                sum+=arr[i];
                if(sum==0){
                    maxi=i+1;
                }
                else{
                    if(hm.get(sum)!=null){
                        maxi=Math.max(maxi,i-hm.get(sum));
                    }
                    else{
                        hm.put(sum,i);
                    }} }
            return maxi;
        }
